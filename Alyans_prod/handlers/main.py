from aiogram import types, Dispatcher
from create_bot import bot
from time import sleep
import sqlite3
from handlers.stager import stager_start
from handlers.spec import start_spec
from handlers.admin import start_admin

CHANNEL_ID = -1001805




async def start(message : types.Message):
    await message.delete()
    photo = "https://i.ibb.co/HFm6X6J/L-logo.jpg"
    await bot.send_photo(message.from_user.id, photo=photo, caption='''–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–ª—å—è–Ω—Å üòé
–¢—É—Ç —Ç—ã —Å–º–æ–∂–µ—à—å —É–∑–Ω–∞–≤–∞—Ç—å –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∞ —Ç–∞–∫–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É–¥–æ–±–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ üòâ''')
    await bot.send_message(CHANNEL_ID, f"{message.from_user.first_name} {message.from_user.last_name} @{message.from_user.username} –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –±–æ—Ç—É")
    global id
    id = message.from_user.id
    global user
    user = message.from_user.username
    global firstname
    firstname = message.from_user.first_name
    global lastname
    lastname = message.from_user.last_name
    message = await bot.send_message(id, '–ü—Ä–æ–≤–µ—Ä—è—é —Ç–≤–æ–π –¥–æ—Å—Ç—É–ø [25%]')
    sleep(0.8)
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    messag = await bot.send_message(id, '–ü—Ä–æ–≤–µ—Ä—è—é —Ç–≤–æ–π –¥–æ—Å—Ç—É–ø [50%]')
    sleep(0.8)
    await bot.delete_message(chat_id=message.chat.id, message_id=messag.message_id)
    messa = await bot.send_message(id, '–ü—Ä–æ–≤–µ—Ä—è—é —Ç–≤–æ–π –¥–æ—Å—Ç—É–ø [75%]')
    sleep(0.8)
    await bot.delete_message(chat_id=message.chat.id, message_id=messa.message_id)
    mess = await bot.send_message(id, '–ü—Ä–æ–≤–µ—Ä—è—é —Ç–≤–æ–π –¥–æ—Å—Ç—É–ø [100%]')
    sleep(0.8)
    await bot.delete_message(chat_id=message.chat.id, message_id=mess.message_id)
    await bot.send_message(id, '–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã')
    base = sqlite3.connect('main.db')
    cur = base.cursor()
    cur.execute('SELECT login FROM stager')
    rows = cur.fetchall()
    username_stager = [row[0] for row in rows]
    base = sqlite3.connect('main.db')
    cur = base.cursor()
    cur.execute('SELECT USERNAME FROM spec')
    rows = cur.fetchall()
    username_spec = [row[0] for row in rows]
    if user in username_stager:
        await bot.send_message(id, "–ï—â—ë —Ä–∞–∑ –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ üòé", parse_mode="HTML")
        sleep(3)
        await stager_start(message)
        await bot.send_message(CHANNEL_ID, f"@{user} –ø—Ä–æ—à—ë–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ –¥–æ—Å—Ç—É–ø—É. \n–î–æ—Å—Ç—É–ø - <b>–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∞</b>", parse_mode="HTML")
        base = sqlite3.connect('main.db')
        cur = base.cursor()
        cur.execute('INSERT OR IGNORE INTO ID VALUES(?, ?, ?, ?)', (int(id),(user),(firstname),(lastname)))
        base.commit()
        base.close()
    elif user in username_spec:
        await bot.send_message(id, "–ï—â—ë —Ä–∞–∑ –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ üòé", parse_mode="HTML")
        await start_spec(message)
        await bot.send_message(CHANNEL_ID, f"@{user} –ø—Ä–æ—à—ë–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ –¥–æ—Å—Ç—É–ø—É. \n–î–æ—Å—Ç—É–ø - <b>–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç</b>", parse_mode="HTML")
    else:
        await message.answer(f"""–£–≤—ã, —É —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É
–î–ª—è –µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—Ä–∞—Ç–∏—Å—å –∫ —Ç–∏–º–ª–∏–¥–∞–º:
–ï–≤–≥–µ–Ω–∏–π - @aver1413
–î–º–∏—Ç—Ä–∏–π - @Sselenso
–õ–µ–≤ - @xphmi
""")
        await bot.send_message(CHANNEL_ID, f"@{user} –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª –ø—Ä–æ—Ä–≤–∞—Ç—å—Å—è –≤ –±–æ—Ç–∞, –Ω–æ –¥–æ—Å—Ç—É–ø–∞ —É –Ω–µ–≥–æ –Ω–µ—Ç")
    base.close()



def start_handlers(dp : Dispatcher):
    dp.register_message_handler(start, commands='start')








